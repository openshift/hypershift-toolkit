kind: Deployment
apiVersion: apps/v1
metadata:
  name: kube-apiserver
  labels:
    app: kube-apiserver
spec:
  replicas: {{ .Replicas }}
  selector:
    matchLabels:
      app: kube-apiserver
  template:
    metadata:
      labels:
        app: kube-apiserver
    spec:
      tolerations:
        - key: "multi-az-worker"
          operator: "Equal"
          value: "true"
          effect: NoSchedule
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values: ["kube-apiserver"]
            topologyKey: "kubernetes.io/hostname"
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values: ["kube-apiserver"]
            topologyKey: "failure-domain.beta.kubernetes.io/zone"
      automountServiceAccountToken: false
      containers:
      - name: kube-apiserver
        image: {{ imageFor "hyperkube" }}
        command:
        - hyperkube
        - kube-apiserver
        args:
        - "--openshift-config=/etc/kubernetes/apiserver-config/config.yaml"
        workingDir: /var/log/kube-apiserver
        livenessProbe:
          httpGet:
            scheme: HTTPS
            port: {{ .InternalAPIPort }}
            path: healthz
          initialDelaySeconds: 45
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            scheme: HTTPS
            port: {{ .InternalAPIPort }}
            path: healthz
          initialDelaySeconds: 10
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /etc/kubernetes/secret/
          name: secret
        - mountPath: /etc/kubernetes/apiserver-config/
          name: apiserver-config
        - mountPath: /etc/kubernetes/config/
          name: config
        - mountPath: /etc/kubernetes/oauth/
          name: oauth
        - mountPath: /var/log/kube-apiserver/
          name: logs
{{ if includeVPN }}
      - name: openvpn-client
        image: quay.io/sjenning/poc:openvpn
        imagePullPolicy: Always
        command:
        - /usr/sbin/openvpn
        - --config
        - /etc/openvpn/config/client.conf
        workingDir: /etc/openvpn/
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/openvpn/secret
          name: vpnsecret
        - mountPath: /etc/openvpn/config
          name: vpnconfig
{{ end }}
      volumes:
      - secret:
          secretName: kube-apiserver
        name: secret
      - emptyDir: {}
        name: logs
      - configMap:
          name: kube-apiserver
        name: config
      - configMap:
          name: kube-apiserver-config
        name: apiserver-config
      - configMap:
          name: kube-apiserver-oauth-metadata
        name: oauth
{{ if includeVPN }}
      - configMap:
          name: kube-apiserver-vpnclient-config
        name: vpnconfig
      - secret:
          secretName: openvpn-client
        name: vpnsecret
{{ end }}
